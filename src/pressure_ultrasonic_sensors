

/* This example demonstrates how to take a standard 3-wire pressure transducer
 *  and read the analog signal, then convert the signal to a readable output and
 *  display it onto an LCD screen.
 *  
 *  Contact Tyler at tylerovens@me.com if you have any questions
 */


const int pressureInput = A0; //select the analog input pin for the pressure transducer
const int pressureZero = 102.4; //analog reading of pressure transducer at 0psi
const int pressureMax = 921.6; //analog reading of pressure transducer at 100psi
const int pressuretransducermaxPSI = 232; //psi value of transducer being used



float pressureValue = 0; //variable to store the value coming from the pressure transducer
float pressure_bar = 0;


void pressure() //loop routine runs over and over again forever
{
  pressureValue = analogRead(pressureInput); //reads value from input pin and assigns to variable
  pressureValue = ((pressureValue-pressureZero)*pressuretransducermaxPSI)/(pressureMax-pressureZero); //conversion equation to convert analog reading to psi
  pressure_bar = pressureValue * 0.068948;
 Serial.print(pressureValue, 1); //prints value from previous line to serial
  Serial.println("psi"); //prints label to serial

}


/*
const int trigPin = 7; //set pin variables
const int echoPin = 8;

int trigState = LOW; //state of trigPin
unsigned long interval = 1000; // interval in milliseconds at which trigPin turns on
unsigned long prevMillis = 0; //microsecond at which the pin was last writen
unsigned long curMillis = 0;
int duration = 0; //variables
int distance = 0;
int tank_level = 0;

void Ultrasonic_sensor_setup() // to be called within void setup()
{
	pinMode(trigPin,OUTPUT); //set pinmodes
	pinMode(echoPin,INPUT);
	
}

void Ultrasonic_sensor_readings() // to be called within void loop()
{
	curMillis = millis(); //time in milliseconds from which the code was started
	if (curMillis-prevMillis >= interval) { //check "blink without delay" code
		prevMillis = curMillis;
		if (trigState == LOW){
			(trigState = HIGH);
		}
		else {
			(trigState = LOW);
		}
	}


	digitalWrite(trigPin,trigState);
	
	duration = pulseIn(echoPin,HIGH);
	distance = (duration/2) / 29.1;
  tank_level = map (distance, 12, 24, 100, 0);
	//if (printState = HIGH){
	//Serial.print(distance);
	//Serial.println("cm");}
	//}
*/